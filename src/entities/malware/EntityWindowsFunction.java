/* 
 * Copyright (C) 2016 BIP-M Framework.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package entities.malware;

import dump.parsers.interfaces.IEntityParserVisitor;
import entities.Entity;
import entities.EntityAttribute;
import java.math.BigInteger;
import java.util.Map;
import system.utils.IEntityVisitor;

/**
 *
 * @author Gonzalo
 */
public class EntityWindowsFunction extends Entity {

    public static final String _TAG = "Function";
    public static final int _SIZE_STRUCTURE = 0x120; //[bytes]

    private String _name;
    private int _functionMaxSize; // [bytes]
    private BigInteger _functionVA;
    private String _functionVAHex;
    private boolean hooked;
    private String hookType;

    private EntityWindowsFunctionOperation[] _operations;
    private long offset;

    public EntityWindowsFunction() {
        this.hooked = false;
        this._functionMaxSize = _SIZE_STRUCTURE;
    }

    public String getName() {
        return _name;
    }

    public void setName(String _name) {
        this._name = _name;
    }

    public int getFunctionMaxSize() {
        return _functionMaxSize;
    }

    public void setFunctionMaxSize(int _functionMaxSize) {
        this._functionMaxSize = _functionMaxSize;
    }

    public BigInteger getFunctionVA() {
        return _functionVA;
    }

    public void setFunctionVA(BigInteger _functionVA) {
        this._functionVA = _functionVA;
    }

    public String getFunctionVAHex() {
        return _functionVAHex;
    }

    public void setFunctionVAHex(String _functionVAHex) {
        this._functionVAHex = _functionVAHex;
    }

    public EntityWindowsFunctionOperation[] getOperations() {
        return _operations;
    }

    public void setOperations(EntityWindowsFunctionOperation[] _operations) {
        this._operations = _operations;
    }

    public boolean isHooked() {
        return hooked;
    }

    public void setHooked(boolean hooked) {
        this.hooked = hooked;
    }

    public String getHookType() {
        return hookType;
    }

    public void setHookType(String hookType) {
        this.hookType = hookType;
    }

    public long getOffset() {
        return offset;
    }

    public void setOffset(long offset) {
        this.offset = offset;
    }

    @Override
    public void getAttributesContent(long position, Map.Entry<String, EntityAttribute> e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void accept(IEntityVisitor visitor) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void accept(IEntityParserVisitor visitor) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
